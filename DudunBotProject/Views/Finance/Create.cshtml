@using mdlDudunBot
@model mdlDudunBot.Finance

@{
    ViewBag.Title = "Finance - Create";
    ViewBag.Controller = "Finance";
    ViewBag.Action = "Create";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group mb-3">
            @Html.LabelFor(model => model.Source, htmlAttributes: new { @class = "form-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Source, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Source, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group mb-3">
            @Html.LabelFor(model => model.Nominal, htmlAttributes: new { @class = "form-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Nominal, new { htmlAttributes = new { @class = "form-control"} })
                @Html.ValidationMessageFor(model => model.Nominal, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group mb-3">
            @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "form-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control datefield" } })
                @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group mb-3">
            @Html.LabelFor(model => model.Type, htmlAttributes: new { @class = "form-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Type, new SelectList(Enum.GetValues(typeof(CategoryFinance))),  new { @class = "form-control" } )
                @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group mb-3">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-primary" />
                @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-success" })
            </div>
        </div>
    </div>
}

